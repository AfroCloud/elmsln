ELMSLN - Installation Guide

These steps will help you setup ELMSLN on an Apache / Unix environment.

Using git for version control is recommended due to the sheer volume of files.  Suggested .gitignores are included but generally all changes you make after deploying should happen inside the config directory.  All scripts, Drupal core files, and piwik files that need configuration changes are referenced to symlinks in the config directory.


=== DOWNLOAD ===
First, get elmsln and put it in /var/www:

cd /var/www
git clone https://github.com/btopro/elmsln.git

=== MODIFY CONFIG ===
cd /var/www/elmsln/config/scripts/drush-create-site/
cp config.cfg.example config.cfg
vi config.cfg

Modify these values to match your file system and implementation requirements. More often then not this is simply supplying default email addresses and mysql root user / pass.  There are additional options based on your configuration changes but those entered are recommended defaults.

=== SELINUX ===
Next you need to modify selinux settings
sudo setsebool -P httpd_can_network connect
sudo setsebool -P httpd_can_sendmail
chcon -R --reference /var/www/html /dev/shm

=== APC ===
Apply the settings recommended in docs/apc.txt:
sudo vi /etc/php.d/apc.ini

=== PHP ===
Apply the settings recommended in docs/php.txt
sudo vi /etc/php.ini

=== MYSQL ===
Apply the settings recommended in docs/mysql.txt
sudo vi /etc/my.cnf

=== BIN ===
issue the following commands to place these scripts in scope of bin which will allow the crontab to pick up the job and process it.  There’s also an optional drush remove site command that’s listed too. (good for clean up of things accidentally created)

sudo ln -s /var/www/elmsln/scripts/drush-create-site /usr/local/bin/drush-create-site

# add the following command for drush remove site shorthand
sudo -i
vi .bashrc
alias drs='/usr/local/bin/drush-create-site/rm-site.sh'

=== CRONTAB ===
Apply the settings recommended in docs/crontab.txt
sudo vi /etc/crontab

=== DOMAINS ===
Apply similar settings to those recommended in docs/domains.txt
sudo vi /etc/httpd/conf.d/domains.conf

=== ELMSLN INSTALLER ===
The last step is to invoke the elmsln-install.sh script to kick everything off.  This will automatically take your default settings defined in elmsln/config/scripts/drush-create-site/config.cfg and try and install all the drupal sites needed to get things started.  It will also automatically author a module with all of your private connection credentials using a randomly generated cis_connector keychain.

You can find this module in elmsln/config/shared/drupal-7.x/modules and can modify it as you see fit but it’s a great starting point for all of the web service calls to work correctly between systems OOTB.  It’s also automatically enabled on all the jobs kicked off by the script so everything can talk to each other.

the command is:
bash /var/www/elmsln/scripts/install/elmsln-install.sh

At this point, ELMSLN should pick up files and start trying to build them and hopefully you’ll get emails if it all worked!

Stay thirsty my friends.
