<?php
/**
 * @file
 * Code for the CIS Course Authority feature.
 */

include_once 'cis_course_authority.features.inc';

/**
 * Implements hook_cron().
 */
function cis_course_authority_cron() {
  // sync with the CIS to ensure our local course nodes mirror the remote
  _cis_course_authority_cis_sync();
}

/**
 * Sync course data with that found in CIS.
 * @param  boolean $cached if we should use cached results from CIS or fresh
 */
function _cis_course_authority_cis_sync($cached = FALSE) {
  // call home for a list of courses
  $remote_courses = _cis_connection_service_instance_query('cis', 'node', array('type' => 'course'), $cached);
  $local_courses = _cis_connector_assemble_entity_list('node', 'cis_course', 'field_cis_course_uuid', 'nid');
  $local_sections = _cis_connector_assemble_entity_list('node', 'section', array('field_section_course_ref', 'target_id'), 'nid', array('field_section_id' => array('value', 'master_', 'STARTS_WITH')), array(), array(), FALSE);
  // loop through the remote courses we pulled if we got any
  if (!empty($remote_courses)) {
    foreach ($remote_courses as $remote_course) {
      $change = FALSE;
      // if the uuid matches the remote, we know we have to update something
      if (isset($local_courses[$remote_course['uuid']])) {
        $new = FALSE;
        // load the local course which had the remote uuid match
        $course = node_load($local_courses[$remote_course['uuid']]);
        // ensure title changed
        if ($course->title != $remote_course['title']) {
          $change = TRUE;
          $course->title = $remote_course['title'];
        }
        // ensure machine name changed
        if ($course->field_course_machine_name[LANGUAGE_NONE][0]['value'] != $remote_course['field_machine_name']) {
          $change = TRUE;
          $course->field_course_machine_name[LANGUAGE_NONE][0]['value'] = $remote_course['field_machine_name'];
        }
        // make sure we aren't saving, constantly
        if ($change) {
          node_save($course);
        }
      }
      else {
        $new = TRUE;
        // create this locally
        $course = new stdClass();
        $course->type = 'cis_course';
        $course->title = $remote_course['title'];
        // machine name to match remote so we know how to build the links
        $course->field_course_machine_name[LANGUAGE_NONE][0]['value'] = $remote_course['field_machine_name'];
        // set the local uuid linked field value to that we get from the remote
        $course->field_cis_course_uuid[LANGUAGE_NONE][0]['value'] = $remote_course['uuid'];
        $course->language = LANGUAGE_NONE;
        $course->is_new = TRUE;
        node_object_prepare($course);
        // build out via submit then save
        if($course = node_submit($course)) {
          // force these to be saved by user 1 just so they have some user affiliation
          $course->uid = 1;
          node_save($course);
        }
      }
      // make a master_{course} section to match
      if (!isset($local_sections[$course->nid])) {
        // create this locally
        $section = new stdClass();
        $section->type = 'section';
        $section->title = t('@title master section', array('@title' => $course->title));
        // set the local uuid linked field value to that we get from the remote
        $section->field_section_id[LANGUAGE_NONE][0]['value'] = 'master_' . $course->field_course_machine_name[LANGUAGE_NONE][0]['value'];
        $section->field_section_course_ref['und'][0]['target_id'] = $course->nid;
        $section->language = LANGUAGE_NONE;
        $section->is_new = TRUE;
        node_object_prepare($section);
        // build out via submit then save
        if($section = node_submit($section)) {
          // force these to be saved by user 1 just so they have some user affiliation
          $section->uid = 1;
          node_save($section);
        }
        // save course to associate this section if needed
        $course->field_course_sections_ref['und'][] = array('target_id' => $section->nid);
        node_save($course);
      }
    }
    // now sync the sections to go along with it if they are enabled
    if (module_exists('cis_section')) {
      // load up courses now that we should have them all added locally
      $courses = _cis_connector_assemble_entity_list('node', 'cis_course', 'field_course_machine_name', 'nid');
      // loop through each course and query to sync the section rosters
      foreach ($courses as $machine_name => $nid) {
        _cis_section_sync_roster($machine_name, $nid);
      }
    }
  }
}
