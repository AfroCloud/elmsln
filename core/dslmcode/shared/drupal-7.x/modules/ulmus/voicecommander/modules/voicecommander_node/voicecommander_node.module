<?php
/**
 * @file
 * A light-weight, customizable voice commander module for node operations.
 */

/**
 * Implements hook_voice_command().
 */
function voicecommander_node_voice_command() {
  $ops = array();
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $ops['node'] = array(
      'commands' => array(
        // edit
        '%phrase edit' => array(
          'callback' => 'Drupal.voicecommander.goTo',
          'data' => arg (0) . '/' . arg(1) . '/edit',
        ),
        // delete
        '%phrase delete' => array(
          'callback' => 'Drupal.voicecommander.goTo',
          'data' => arg (0) . '/' . arg(1) . '/delete',
        ),
        // revisions
        '%phrase revisions' => array(
          'callback' => 'Drupal.voicecommander.goTo',
          'data' => arg (0) . '/' . arg(1) . '/revisions',
        ),
      ),
    );
    // support for book, core module as well
    if (module_exists('book')) {
      $ops['book'] = array(
        'file' => drupal_get_path('module', 'voicecommander_node') . '/js/vc-book.js',
        'commands' => array(
          // print
          '%phrase print' => array(
            'callback' => 'Drupal.voicecommander.goTo',
            'data' => 'book/export/html/' . arg(1),
          ),
          // outline
          '%phrase delete' => array(
            'callback' => 'Drupal.voicecommander.goTo',
            'data' => arg (0) . '/' . arg(1) . '/outline',
          ),
          // navigatiopn
          '%phrase (go to) next (page)' => array(
            'callback' => 'Drupal.voicecommander.bookNavigation',
          ),
          '%phrase (go to) previous (page)' => array(
            'callback' => 'Drupal.voicecommander.bookNavigation',
          ),
        ),
      );
    }
  }
  return $ops;
}
