diff --git a/core/dslmcode/shared/drupal-7.x/modules/ulmus/bakery/bakery.module b/core/dslmcode/shared/drupal-7.x/modules/ulmus/bakery/bakery.module
index 8640390..59c7d17 100644
--- a/core/dslmcode/shared/drupal-7.x/modules/ulmus/bakery/bakery.module
+++ b/core/dslmcode/shared/drupal-7.x/modules/ulmus/bakery/bakery.module
@@ -1869,3 +1869,44 @@ function bakery_pull_form_submit($form, &$form_state) {
     $form_state['redirect'] = 'user/' . $result;
   }
 }
+
+/**
+ * Implements hook_page_delivery_callback_alter().
+ */
+function bakery_page_delivery_callback_alter(&$callback, $set = FALSE) {
+  // switch this page delivery callback so we can better act on it
+  // this is an obscure method that helps reduce the chances of
+  // incorrectly issuing an access denied message.  This appears
+  // to potentially even be browser / server interpretation
+  // driven so we need this to help clean up those nagging issues.
+  // A common issue this avoids is a logged in user on a bakery
+  // site with public access being given access denied when they
+  // have logged into another system with bakery SSO but not this one
+  if ($callback == 'drupal_deliver_html_page' || $callback == 'boost_deliver_html_page') {
+    $callback = 'bakery_deliver_html_page';
+  }
+}
+
+/**
+ * Callback for bakery to handle page delivery.
+ */
+function bakery_deliver_html_page($page_callback_result) {
+  // see if we are getting access denied about to be issued
+  // on a bakery slave domain and are not currently logged in.
+  if ($GLOBALS['user']->uid == 0 && is_int($page_callback_result) && $page_callback_result == MENU_ACCESS_DENIED && !variable_get('bakery_is_master', 0)) {
+    // attempt to issue a bakery login with blank credentials
+    $form = array('#action' => current_path());
+    $form_state = array('values' => array('name' => 'BAKERY_DEFER_MASTER', 'pass' => 'BAKERY_DEFER_MASTER', 'op' => 'login'));
+    _bakery_login_submit($form, $form_state);
+  }
+  // allow for boost to take us to the right place
+  // boost has methods for helping handle this edge case and
+  // is a commonly installed project
+  if (module_exists('boost')) {
+    boost_deliver_html_page($page_callback_result);
+  }
+  else {
+    // Call original function which drupal will handle by default methods
+    drupal_deliver_html_page($page_callback_result);
+  }
+}
