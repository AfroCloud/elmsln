***************
*** 57,97 ****
        }
      }
    }
-   return args;
  };
  
  /**
   * Helper function to return a view's arguments based on a path.
   */
  Drupal.Views.parseViewArgs = function (href, viewPath) {
    var returnObj = {};
    var path = Drupal.Views.getPath(href);
    // Ensure we have a correct path.
-   if (viewPath && path.substring(0, viewPath.length + 1) == viewPath + '/') {
      var args = decodeURIComponent(path.substring(viewPath.length + 1, path.length));
      returnObj.view_args = args;
      returnObj.view_path = path;
    }
-   return returnObj;
  };
  
  /**
   * Strip off the protocol plus domain from an href.
   */
  Drupal.Views.pathPortion = function (href) {
    // Remove e.g. http://example.com if present.
    var protocol = window.location.protocol;
    if (href.substring(0, protocol.length) == protocol) {
      // 2 is the length of the '//' that normally follows the protocol
      href = href.substring(href.indexOf('/', protocol.length + 2));
    }
-   return href;
  };
  
  /**
   * Return the Drupal path portion of an href.
   */
  Drupal.Views.getPath = function (href) {
    href = Drupal.Views.pathPortion(href);
    href = href.substring(Drupal.settings.basePath.length, href.length);
    // 3 is the length of the '?q=' added to the url without clean urls.
--- 62,117 ----
        }
      }
    }
+   return args;  
  };
  
  /**
   * Helper function to return a view's arguments based on a path.
   */
  Drupal.Views.parseViewArgs = function (href, viewPath) {
+   //Exit early if called without href or viewPath
+   if (!(href && viewPath)) {
+     return;
+   }
+   
    var returnObj = {};
    var path = Drupal.Views.getPath(href);
    // Ensure we have a correct path.
+   if (path && path.substring(0, viewPath.length + 1) == viewPath + '/') {
      var args = decodeURIComponent(path.substring(viewPath.length + 1, path.length));
      returnObj.view_args = args;
      returnObj.view_path = path;
    }
+   return returnObj;  
  };
  
  /**
   * Strip off the protocol plus domain from an href.
   */
  Drupal.Views.pathPortion = function (href) {
+   //Exit early if called without href
+   if (!href) {
+     return;
+   }
+   
    // Remove e.g. http://example.com if present.
    var protocol = window.location.protocol;
    if (href.substring(0, protocol.length) == protocol) {
      // 2 is the length of the '//' that normally follows the protocol
      href = href.substring(href.indexOf('/', protocol.length + 2));
    }
+   return href;  
  };
  
  /**
   * Return the Drupal path portion of an href.
   */
  Drupal.Views.getPath = function (href) {
+   //Exit early if called without href
+   if (!href) {
+     return;
+   }
+   
    href = Drupal.Views.pathPortion(href);
    href = href.substring(Drupal.settings.basePath.length, href.length);
    // 3 is the length of the '?q=' added to the url without clean urls.
