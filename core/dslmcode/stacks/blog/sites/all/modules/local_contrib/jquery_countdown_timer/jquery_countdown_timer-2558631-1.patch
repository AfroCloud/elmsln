diff --git a/jquery_countdown_timer.api.php b/jquery_countdown_timer.api.php
index e69de29..9ec067e 100644
--- a/jquery_countdown_timer.api.php
+++ b/jquery_countdown_timer.api.php
@@ -0,0 +1,23 @@
+<?php
+
+/**
+ * jQuery Countdown timer api
+ */
+
+/**
+ * Implements hook_jquery_countdown_timer_date_alter().
+ *
+ * @param  [string] &$date   a string based representation of a date
+ * @param  [mixed] $context optional value that can provide additional context
+ *  an example of using this could be custom invoking the attachment of the timer
+ *  to a node form, and passing the node in question into the invoking. This could
+ *  allow the node to actually influence the time that's shown via fields.
+ *
+ *  Default for the context variable is NULL unless otherwise passed in.
+ */
+function hook_jquery_countdown_timer_date_alter(&$date, $context) {
+  // example of using a node-field to dictate the time to show
+  if ($context != NULL && isset($node->field_time)) {
+    $date = $node->field_time['und'][0]['value'];
+  }
+}
\ No newline at end of file
diff --git a/jquery_countdown_timer.module b/jquery_countdown_timer.module
index cbcc2f6..828e715 100644
--- a/jquery_countdown_timer.module
+++ b/jquery_countdown_timer.module
@@ -86,9 +86,11 @@ function jquery_countdown_timer_block_view($delta = '', $edit = array()) {
 }
 
 /**
- * Adds javascript to the block.
+ * Adds timer to the page.
+ * @param  mixed $context an optional value to provide context in calls
+ * @return array  an array of items to attach to the current request
  */
-function jquery_countdown_timer_attach() {
+function jquery_countdown_timer_attach($context = NULL) {
   $attach = array();
   $path = drupal_get_path('module', 'jquery_countdown_timer');
   // add external js files
@@ -102,24 +104,27 @@ function jquery_countdown_timer_attach() {
       'scope' => 'footer',
     ),
   );
+  // set the default date and allow other projects to modify contextually
+  $date = variable_get('jquery_countdown_timer_date', date('Y-m-d G:i:s'));
+  drupal_alter('jquery_countdown_timer_date', $date, $context);
   // add js settings
   $settings = array(
-    'jquery_countdown_timer_date' => strtotime(variable_get('jquery_countdown_timer_date', date('Y-m-d G:i:s'))),
+    'jquery_countdown_timer_date' => strtotime($date),
+  );
+  $attach['js'][] = array(
+    'data' =>  array('jquery_countdown_timer' => $settings),
+    'type' => 'setting',
+  );
+  //add css
+  $attach['css'] = array(
+    $path . '/css/jquery_countdown_timer.css',
+  );
+  //add inline css
+  $font_size = variable_get('jquery_countdown_timer_font_size', 28);
+  $attach['css'][] = array(
+    'data' => '.countdownHolder {font-size: ' . $font_size . 'px}',
+    'type' => 'inline',
   );
-   $attach['js'][] = array(
-     'data' =>  array('jquery_countdown_timer' => $settings),
-     'type' => 'setting',
-   );
-   //add css
-   $attach['css'] = array(
-     $path . '/css/jquery_countdown_timer.css',
-   );
-   //add inline css
-   $font_size = variable_get('jquery_countdown_timer_font_size', 28);
-   $attach['css'][] = array(
-     'data' => '.countdownHolder {font-size: ' . $font_size . 'px}',
-     'type' => 'inline',
-   );
   return $attach;
 }
 
