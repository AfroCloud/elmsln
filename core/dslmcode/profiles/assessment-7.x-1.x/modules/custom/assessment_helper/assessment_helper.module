<?php
/**
 * @file
 * Assessment integration improvements.
 */

/**
 * Implements hook_elmsln_api_info().
 */
function assessment_helper_elmsln_api_info() {
  // grade for this item
  $callbacks['grade'] = array(
    'methods' => array('POST'),
    'file' => 'callbacks/v1/grade.inc',
  );
  return $callbacks;
}

/**
 * Implements hook_permission().
 */
function assessment_helper_permission() {
  return array(
    'export quiz results' => array(
      'title' => t('Export quiz results'),
      'description' => t('To download quiz results to csv.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function assessment_helper_menu() {
  $items = array();
  $items['node/%node/exportresults'] = array(
    'title' => 'Export results',
    'description' => 'Export quiz results',
    'page callback' => '_assessment_helper_make_file',
    'page arguments' => array(1),
    'access callback' =>'_assessment_helper_access_callback',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
  return $items;
}

/**
 * Acces callback for node/%node/exportresults
 * @param  object $node  node object
 * @return boolean
 */
function _assessment_helper_access_callback($node) {
  // only display for quiz if they have access
  if (user_access('export quiz results') && $node->type == 'quiz') {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_form_quiz_results_manage_results_form_alter().
 */
function assessment_helper_form_quiz_results_manage_results_form_alter(&$form, &$form_state) {
  if ($node = menu_get_object()) {
    $form['update']['download link'] = array('#markup' => l(t('Download All Results'), 'node/' . $node->nid . '/exportresults'));
  }
}

/**
 * Get records from the database and generate csv file.
 */
function _assessment_helper_make_file($node) {
  // build the file and headers to send it off
  $filename = check_plain(drupal_strtolower($node->title)) . "-report-" . date("F-j-Y-g-i-a") . ".csv";
  $now = gmdate("D, d M Y H:i:s");
  drupal_add_http_header("Expires", "Tue, 03 Jul 2001 06:00:00 GMT");
  drupal_add_http_header("Cache-Control", "max-age=0, no-cache, must-revalidate, proxy-revalidate");
  drupal_add_http_header("Last-Modified", "{$now} GMT");

  // Force download.
  drupal_add_http_header("Content-Type", "application/force-download");
  drupal_add_http_header("Content-Type", "application/octet-stream");
  drupal_add_http_header("Content-Type", "application/download");

  // Disposition / encoding on response body.
  drupal_add_http_header("Content-Disposition", "attachment;filename={$filename}");
  drupal_add_http_header("Content-Transfer-Encoding", "binary");

  ob_start();
  $df = fopen("php://output", "w");
  // Put the headers for the csv.
  fputcsv($df, array(
    t('USERNAME'),
    t('EMAIL'),
    check_plain(drupal_strtolower($node->title)),
    t('EVALUATED'),
    t('STARTED'),
    t('FINISHED'),
    t('DURATION'),
    )
  );
  // Get records from the DB.
  $query = db_select('quiz_node_results', 'qnr');
  $query->innerJoin('users', 'u', 'u.uid = qnr.uid');
  // user uid
  $query->addField('u', 'uid', 'uid');
  // user name
  $query->addField('u', 'name', 'name');
  // user mail
  $query->addField('u', 'mail', 'mail');
  // start time
  $query->addField('qnr', 'time_start', 'start');
  // end time
  $query->addField('qnr', 'time_end', 'end');
  // score
  $query->addField('qnr', 'score', 'score');
  // evaluation status
  $query->addField('qnr', 'is_evaluated', 'evaluated');
  // ensure user status
  $query->condition('u.status', 1);
  $result = $query->execute();
  // Build up the array of data to return
  foreach ($result->fetchAll() as $row) {
    $row->duration = ($row->end == 0 ? t('in progress') : round((($row->end - $row->start)/60), 2, PHP_ROUND_HALF_UP) . ' ' . t('minutes'));
    $row->score = ($row->end == 0 ? t('in progress') : check_plain($row->score));
    $row->end = ($row->end == 0 ? t('unfinished') : date("D, M d Y H:i:s", $row->end));
    $row->start = date("D, M d Y H:i:s", $row->start);
    $row->evaluated = ($row->evaluated == 0) ? t('No') : t('Yes');
    // account for edge case names that are missing
    if (empty($row->name)) {
      if ($row->uid == '0') {
        $row->name = variable_get('anonymous', 'Anonymous');
      }
      else {
        $row->name = "ORPHAN " . $row->uid;
      }
    }
    fputcsv($df, array(
      $row->name,
      $row->mail,
      $row->score,
      $row->evaluated,
      $row->start,
      $row->end,
      $row->duration,
      )
    );
  }
  fclose($df);
  echo ob_get_clean();
  drupal_exit();
}