<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_menu().
 */
  function elmsln_cdn_menu() {
    // Admin UI.
    $items['admin/config/development/elmsln_cdn'] = array(
      'title'            => 'ELMSLN CDN',
      'description'      => 'Configure ELMSLN CDN integration.',
      'access arguments' => array(CDN_PERM_ADMIN),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array('elmsln_cdn_admin_general_settings_form'),
      'type'             => MENU_NORMAL_ITEM,
      'file'             => 'elmsln_cdn.admin.inc',
    );

    return $items;
  }

/**
 * Implements hook_module_implements_alter().
 */
function elmsln_cdn_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'js_alter') {
    $group = $implementations['elmsln_cdn'];
    unset($implementations['elmsln_cdn']);
    $implementations['elmsln_cdn'] = $group;
  }
}

/**
 * Implements hook_js_alter().
 */
function elmsln_cdn_js_alter(&$javascript) {
  foreach ($javascript as $path => $values) {
    if (strpos(strval($path), 'sites/all/libraries/') !== FALSE) { 
      $path_end = explode('sites/all/libraries/', $path)[1];
      $arr = explode("/", $path_end, 2);
      $name = $arr[0];
      dpm($name);
      $library = libraries_detect("$name");
      dpm($library);
      if (variable_get('CDN_CHOICE') === 'CDN_CDNJS') {
        $json = file_get_contents('http://api.cdnjs.com/libraries?search=' . $name);
        $data = json_decode($json, true);
        //
        // NOTE: This gets the first result if there are multiple results. 
        // There could be some error if these don't match. Use strnatcasecmp() to test comparisons.
        //
        $name = $data['results'][0]['name']; 
      }
      $version = $library['version'];
      if (!empty($library) && !empty($version)) {
        $cdn_version_arr_elements = getVersions($name);
        if (!empty($cdn_version_arr_elements)) {
          foreach ($cdn_version_arr_elements as $element => $value) {
            if(strpos($version, $cdn_version_arr_elements[$element]['version']) !== FALSE) {
              $files = $cdn_version_arr_elements[$element]['files'];
              dpm("Found a File Version Match");
              foreach ($files as $index => $value) {
                $javascript[$path]['data'] = 'http://cdnjs.cloudflare.com/ajax/libs/'. $name .'/' . $version .'/' . $files[$index]; //strval($files[$index]);
                $javascript[$name]['type'] = 'external';
                dpm($javascript[$path]['data']);
              }
            }
          }
        }
      }
    }
  }
}

function getVersions($name) {
  $versions = array();
  $files = array();
  if (variable_get('CDN_CHOICE') === 'CDN_JSDELIVR'){
    $json = file_get_contents('http://api.jsdelivr.com/v1/jsdelivr/libraries?name='. $name .'&fields=assets');
    $files = json_decode($json, true);
    $versions = $files['assets'];  
  }
  elseif (variable_get('CDN_CHOICE') === 'CDN_CDNJS') {
    $json = file_get_contents('http://api.cdnjs.com/libraries/'. $name);
    $files = json_decode($json, true);
    $versions = $files['assets'];
  }
  else {
    // return blank array === no CDN Selected
  }
  
  return $versions;
}
